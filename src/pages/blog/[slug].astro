---
import AppBar from '../../components/AppBar/AppBar.astro';
import Layout from '../../layouts/Layout.astro';
import { getCollection, getEntry } from 'astro:content';

export async function getStaticPaths() {
  return (await getCollection("blog")).map((p: any) => {
    return {params: {slug: p.slug} }
  })
}

const slug = (Astro.params as any).slug
const post = await getEntry("blog", slug)
const render = await post.render()
console.log(post)
---

<Layout title={`${post.data.title} | Rinaldo Lee`}>
  <Fragment slot="head">
    <meta name="keywords" content={post.data.tags.join(', ')}>
    <meta name="author" content={post.data.author} />
    <meta name="description" content={post.data.summary}/>
    <meta name="subject" content="Rinaldo Lee's personal blog">
    <meta name="language" content="EN">
    <meta name="revised" content={post.data.updateDate.toDateString()} />
    <meta name="summary" content={post.data.summary} />
    
    <meta name="og:title" content={post.data.title}>
    <meta name="og:type" content="article">
    <meta name="og:url" content={`https://rinaldolee.com/blog/${post.slug}`}>
    {post.data.image && <meta name="og:image" content={post.data.image.src}>}
    <meta name="og:site_name" content="Rinaldo Lee">
    <meta name="og:description" content={post.data.summary}>
    <meta name="article:published_time" content={post.data.publishDate.toISOString()}>
    <meta name="article:modified_time" content={post.data.updateDate.toISOString()}>
    <meta name="article:author" content={post.data.author}>
    {post.data.tags.map(tag => {
      return <meta name="article:tag" content={tag} />
    })}
  </Fragment>
  <Fragment>
    <AppBar />
    <main class="flex flex-row justify-center">
      <article class="prose max-w-lg w-full">
        <h1 class="mb-2">{post.data.title}</h1>
        <div class="flex flex-row gap-2">
          <div class="flex flex-row gap-1 items-center">
            <img src="/img/icons/person.svg" class="w-6 h-6 my-0" />
            by {post.data.author}
          </div>
          <div class="flex flex-row gap-1 items-center">
            <img src="/img/icons/calendar.svg" class="w-6 h-6 my-0" />
            Published on {post.data.publishDate.toLocaleDateString()}
          </div>
          {
            post.data.publishDate.getTime() != post.data.updateDate.getTime() &&
            <div class="flex flex-row gap-1 items-center">
              <img src="/img/icons/calendar.svg" class="w-6 h-6 my-0" />
              :wa
              Updated on {post.data.updateDate.toLocaleDateString()}
            </div>
          }
        </div>
        <div class="flex flex-row gap-1 items-center">
          <img src="/img/icons/time.svg" class="w-6 h-6 my-0" />
          {render.remarkPluginFrontmatter.minutesRead}
        </div>

        {post.data.image &&
          <figure>
            <img src={post.data.image.src} alt={post.data.image.alt} />
          </figure>
        }

        <render.Content />
      </article>
    </main>
  </Fragment>
</Layout>
